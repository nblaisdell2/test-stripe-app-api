# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

# Needed to work with AWS Credentials & AWS CodeBuild
permissions:
  id-token: write
  contents: read

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checking out source code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Testing Secrets
        run: |
          jq --help
          echo "$ALLMYSECRETS"
          echo "$ALLMYVARS"
        shell: bash
        env:
          ALLMYSECRETS: ${{ toJSON(secrets) }}
          ALLMYVARS: ${{ toJSON(vars) }}
      # - name: Populate Environment Variables
      #   run: |
      #     touch .env
      #     echo DB_HOST=${{ secrets.ENV_DB_HOST }} >> .env
      #     echo DB_USER=${{ secrets.ENV_DB_USER }} >> .env
      #     echo DB_PWD=${{ secrets.ENV_DB_PWD }} >> .env
      #     echo DB_NAME=${{ secrets.ENV_DB_NAME }} >> .env
      #     echo BASE_CLIENT_URL=${{ secrets.ENV_BASE_CLIENT_URL }} >> .env
      #     echo STRIPE_SUBSCRIPTION_PRODUCT_ID=${{ secrets.ENV_STRIPE_SUBSCRIPTION_PRODUCT_ID }} >> .env
      #     echo STRIPE_WEBHOOK_SECRET=${{ secrets.ENV_STRIPE_WEBHOOK_SECRET }} >> .env
      #     echo STRIPE_API_SECRET_KEY=${{ secrets.ENV_STRIPE_API_SECRET_KEY }} >> .env
      #     cat .env
      # - name: Install Dependencies
      #   run: npm ci
      # - name: Build the Application
      #   run: npm run build --if-present
      # - name: Test the Application
      #   run: npm test
      # - name: Check needed values
      #   run: bash check_github_secrets.sh ${{ secrets.AWS_REGION || 'none' }} ${{ secrets.AWS_ACCOUNT_ID || 'none' }} ${{ secrets.AWS_LAMBDA_EXEC_ARN || 'none' }} ${{ secrets.AWS_GHACTIONS_ROLENAME || 'none' }}
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_GHACTIONS_ROLENAME }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      # - name: Create AWS Infrastructure
      #   run: bash create_aws_api.sh ${{ secrets.AWS_ACCOUNT_ID }} ${{ secrets.AWS_REGION }} ${{ github.event.repository.name }} ${{ secrets.AWS_LAMBDA_EXEC_ARN }} ${{github.event.repository.clone_url }}
      # - name: Running AWS CodeBuild
      #   uses: aws-actions/aws-codebuild-run-build@v1.0.12
      #   with:
      #     project-name: ${{ github.event.repository.name }}
